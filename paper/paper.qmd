---
title: "Deaths of People Experiencing Homelessness In Toronto"
subtitle: "My subtitle if needed"
author: 
  - Sakura Hu
thanks: "Code and data are available at: https://open.toronto.ca/dataset/deaths-of-people-experiencing-homelessness/."
date: "2024-09-23"
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-yearly-deaths
#| fig-cap: Yearly Distribution of Deaths of People Experiencing Homelessness
#| echo: false

analyze_data <- read_csv("../data/raw_data/raw_data.csv")

```

```{r}
# Reshape the data to long format and count occurrences for each bias
bias_counts <- cleaned_data %>%
  select(RACE_BIAS, ETHNICITY_BIAS, SEXUAL_ORIENTATION_BIAS, GENDER_BIAS, LANGUAGE_BIAS, RELIGION_BIAS, MENTAL_OR_PHYSICAL_DISABILITY) %>%
  pivot_longer(cols = everything(), names_to = "Bias_Type", values_to = "Bias_Value") %>%
  mutate(Value = ifelse(Bias_Value == "None", 0, 1)) %>%
  group_by(Bias_Type) %>%
  summarise(Count = sum(Value))

# Create a bar chart
ggplot(bias_counts, aes(x = reorder(Bias_Type, Count), y = Count, fill = Bias_Type)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(x = "Bias Type", y = "Count of Occurrences", title = "Count of Occurrences Based on Different Bias Types") +
  scale_fill_brewer(palette = "Set3") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}

# Filter out "None" from the RACE_BIAS column and count occurrences
race_bias_counts <- cleaned_data %>%
  filter(RACE_BIAS != "None") %>%
  count(RACE_BIAS)

# Create the bar chart
ggplot(race_bias_counts, aes(x = reorder(RACE_BIAS, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "Race Bias Categories", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Race Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
```{r}
# Count occurrences by OCCURRENCE_YEAR without filtering
year_counts <- cleaned_data %>%
  count(OCCURRENCE_YEAR)

# Create the bar chart
ggplot(year_counts, aes(x = as.factor(OCCURRENCE_YEAR), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "Year of Occurrence", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Year") +
  scale_x_discrete(drop = FALSE) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
```{r}
# Filter out "None" and create a new column for Race Bias categorization
race_counts <- cleaned_data %>%
  filter(RACE_BIAS != "None") %>%
  mutate(RACE_CATEGORY = ifelse(RACE_BIAS == "Black", "Black", "Other"))

# Count occurrences by OCCURRENCE_YEAR and RACE_CATEGORY
year_race_counts <- race_counts %>%
  count(OCCURRENCE_YEAR, RACE_CATEGORY)

# Create the stacked bar chart
ggplot(year_race_counts, aes(x = as.factor(OCCURRENCE_YEAR), y = n, fill = RACE_CATEGORY)) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.8) +
  scale_fill_manual(values = c("Black" = "steelblue", "Other" = "orange")) +
  theme_minimal() +
  labs(x = "Year of Occurrence", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Year and Race Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
```{r}
# Filter out "None" from the ETHNICITY_BIAS column and count occurrences
ethnicity_bias_counts <- cleaned_data %>%
  filter(ETHNICITY_BIAS != "None") %>%
  count(ETHNICITY_BIAS)

# Create the bar chart
ggplot(ethnicity_bias_counts, aes(x = reorder(ETHNICITY_BIAS, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "ethnicity Bias Categories", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by ethnicity Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
```{r}
# Filter out "None" from the LANGUAGE_BIAS column and count occurrences
language_bias_counts <- cleaned_data %>%
  filter(LANGUAGE_BIAS != "None") %>%
  count(LANGUAGE_BIAS)

# Create the bar chart
ggplot(language_bias_counts, aes(x = reorder(LANGUAGE_BIAS, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "Language Bias Categories", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Language Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
```{r}
# Filter out "None" from the RELIGION_BIAS column and count occurrences
religion_bias_counts <- cleaned_data %>%
  filter(RELIGION_BIAS != "None") %>%
  count(RELIGION_BIAS)

# Create the bar chart
ggplot(religion_bias_counts, aes(x = reorder(RELIGION_BIAS, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "Religion Bias Categories", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Language Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
# Filter out "None" from the SEXUAL_ORIENTATION_BIAS column and count occurrences
sexual_ori_bias_counts <- cleaned_data %>%
  filter(SEXUAL_ORIENTATION_BIAS != "None") %>%
  count(SEXUAL_ORIENTATION_BIAS)

# Create the bar chart
ggplot(sexual_ori_bias_counts, aes(x = reorder(SEXUAL_ORIENTATION_BIAS, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "Sexual Orientation Bias Categories", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Sexual Orientation Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
```{r}
# Filter out "None" from the GENDER_BIAScolumn and count occurrences
gender_bias_counts <- cleaned_data %>%
  filter(GENDER_BIAS != "None") %>%
  count(GENDER_BIAS)

# Create the bar chart
ggplot(gender_bias_counts, aes(x = reorder(GENDER_BIAS, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  theme_minimal() +
  labs(x = "Gender Bias Categories", y = "Number of Occurrences", 
       title = "Occurrences of Hate Crimes by Gender Bias") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

analysis_data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))

analysis_data |> 
  ggplot(aes(x = width, y = length)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Wing width (mm)",
       y = "Wing length (mm)")
```

Talk way more about it. 



# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


